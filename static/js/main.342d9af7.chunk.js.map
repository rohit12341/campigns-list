{"version":3,"sources":["components/Modal.js","components/data.js","util/date.js","components/tableRow.js","App.js","index.js"],"names":["modalRoot","document","getElementById","Modal","isOpen","handleModal","data","el","createElement","useEffect","appendChild","removeChild","createPortal","className","id","onClick","e","target","src","process","alt","name","region","createdOn","price","csv","report","image_url","months","DateStatus","time","nowDate","Date","now","getTime","someDate","getDate","getMonth","getFullYear","TableRow","item","moveEvent","useState","openCal","setCal","date","setDate","ref","React","createRef","handleClickOutside","event","current","contains","addEventListener","removeEventListener","day","getDay","month","year","text","isFuture","days","Math","ceil","abs","round","getTimeDiff","type","value","onChange","handleDateChange","App","props","status","setState","isShow","modalData","changeTab","i","activeTab","val","oldEvents","state","events","filter","idx","eventData","removeOldEvent","removedEvent","push","relData","forEach","this","map","key","length","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.342d9af7.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// 'modal-root' is a sibling to 'app-root'\nconst modalRoot = document.getElementById(\"modal-root\");\n\nexport default function Modal({ isOpen, handleModal, data}) {\n  // element to which the modal will be rendered\n  const el = document.createElement(\"div\");\n\n  useEffect(() => {\n    // append to root when the children of Modal are mounted\n    modalRoot.appendChild(el);\n\n    // do a cleanup\n    return () => {\n      modalRoot.removeChild(el);\n    };\n  }, [el]);\n\n  const backDrop = (e) => {\n    // hide popup when click outside to the modal\n      if(e.target.id === 'modal'){\n          handleModal(false);\n      }\n  }\n\n  return (\n    isOpen &&\n    createPortal(\n      <div className=\"modal\" id=\"modal\" onClick={backDrop}>\n       <div className=\"modal-content\">\n           <div className=\"head\">\n               <img src={`${process.env.PUBLIC_URL}/assets/img/Bitmap.png`} alt=\"game img\"/>\n               <div>\n                   <p>{data.name}</p>\n                   <span>{data.region}</span>\n               </div>\n           </div>\n           <h2>Pricing</h2>\n           <ul className=\"price-list\">\n               <li>\n                   <span className=\"duration\">1 Week - 1 Month</span> \n                   <span className=\"amount\">$ 100.00 </span> \n                </li>\n                <li>\n                   <span className=\"duration\">6 Months</span> \n                   <span className=\"amount\">$ 500.00 </span> \n                </li>\n                <li>\n                   <span className=\"duration\">1 Year</span> \n                   <span className=\"amount\">$ 900.00 </span> \n                </li>\n           </ul>\n           <div className=\"close-btn\">\n               <button onClick={()=>handleModal(false)}>Close</button>\n           </div>\n       </div>\n      </div>,\n      el\n    )\n  );\n}","let data = [\n  {\n    id:1,\n    name: \"Test Whatsapp\",\n    region: \"US\",\n    createdOn: 1659807714999,\n    price: \"Price info of Test Whatsapp\",\n    csv: \"Some CSV link for Whatsapp\",\n    report: \"Some report link for Whatsapp\",\n    image_url:\"Some image url of the campaign\" \n  },\n  {\n    id:2,\n    name: \"Test Whatsapp\",\n    region: \"US\",\n    createdOn: 1611807714999,\n    price: \"Price info of Test Whatsapp\",\n    csv: \"Some CSV link for Whatsapp\",\n    report: \"Some report link for Whatsapp\",\n    image_url:\"Some image url of the campaign\" \n  },\n  {\n    id : 4,\n    name: \"Super Jewels Quest\",\n    region: \"CA, FR\",\n    createdOn: 1559806715124,\n    price: \"Price info of Super Jewels Quest\",\n    csv: \"Some CSV link for Super Jewels Quest\",\n    report: \"Some report link for Super Jewels Ques\",\n    image_url:\"Some image url of the campaign\"\n  },\n  {\n    id: 6,  \n    name: \"Mole Slayer\",\n    region: \"FR\",\n    createdOn: 1559806711124,\n    price: \"Price info of Mole Slayer\",\n    csv: \"Some CSV link for Mole Slayer\",\n    report: \"Some report link for Mole Slayer\",\n    image_url:\"Some image url of the campaign\"\n  },\n  {\n    id : 7,   \n    name: \"Mancala Mix\",\n    region: \"JP\",\n    createdOn: 1559806680124,\n    price: \"Price info of Mancala Mix\",\n    csv: \"Some CSV link for Mancala Mix\",\n    report: \"Some report link for Mancala Mix\",\n    image_url:\"Some image url of the campaign\"\n  }\n]\n\n\nexport { data };","let months = ['Jan', 'feb', 'mar', 'api', 'jun', 'jul', 'aug', 'sept', 'oct', 'nov', 'dec'];\n\n\n// get date function for getting date according to time input in ms\n// output - oct 2022, 6\nexport const getDate = (time) => {\n    let date = new Date(time);\n    let day = date.getDay();\n    let month = months[date.getMonth()];\n    let year = date.getFullYear();\n    return `${month} ${year}, ${day}`;\n  }\n\n // get time difference from current date to given date\n // output - \n // for future date - 1 Year Ahead\n // for past date - 2 months ago \n  export const getTimeDiff = (time) => {\n    let text = '';    \n    let date = new Date(time);\n    let current = new Date(); \n\n    if(date.getDate() === current.getDate() &&\n    date.getMonth() === current.getMonth() &&\n    date.getFullYear() === current.getFullYear()){\n      return 'Today';\n    }\n\n    let isFuture = date > current ? true : false;\n    let days = Math.ceil(Math.abs(date - current) / (1000 * 60 * 60 * 24));\n\n    if(days >= 365){\n      text = `${Math.round(days/365)} Year`;\n    } else if(days > 31 && days < 365){\n      text = `${Math.round(days/30)} Month`;\n    } else if(days > 7) {\n      text = `${Math.ceil(days/7)} Week`;\n    } else {\n      text = `${days} Days`;\n    }\n    return `${text} ${isFuture ? 'Ahead' : 'ago'}`;\n  }\n\n\n  // get date status for past, future or current date\n  export const DateStatus = (time) => {\n    let status = '';\n    let nowDate = new Date();\n    let now = nowDate.getTime();\n    let someDate = new Date(time);\n    if(now - time < 0) status = 'future';\n    else if(someDate.getDate() === nowDate.getDate() &&\n    someDate.getMonth() === nowDate.getMonth() &&\n    someDate.getFullYear() === nowDate.getFullYear()){\n      status = 'current';\n    }\n    else status = 'past'; \n\n    return status;\n  }","import React, { useState, useEffect } from 'react';\nimport { getDate, getTimeDiff } from '../util/date';\n\n\nconst TableRow = ({item, handleModal, moveEvent}) => {\n  const [openCal, setCal] = useState(false);\n  const [date, setDate] = useState('');\n\n  const ref = React.createRef();\n\n  const handleDateChange = (e, id) => {\n   // date input handler for moving event to the relevant tab after changing date\n    setDate(e.target.value);\n    moveEvent(e.target.value, id);\n    setCal(false); \n  }\n\n  const OpenDataFiled = (e) => {\n      setCal(true);\n  }\n  \n\n  useEffect(() => {\n    /**\n     * hide date filed clicked on outside of element\n     */\n    function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setCal(false);;\n        }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n}, [ref]);\n\n\n\n  return (\n    <tr>\n        <td>\n          <p className=\"date\"> {getDate(item.createdOn)}</p>\n          <span className=\"text\">{getTimeDiff(item.createdOn)}</span>\n        </td>\n        <td>\n            <div className=\"camp\">\n              <div className=\"img\"><img src={`${process.env.PUBLIC_URL}/assets/img/Bitmap.png`} alt=\"camp\"/> </div>\n              <div><p>{item.name}</p><span>{item.region}</span></div>\n          </div>\n          </td>\n        <td>\n          <div className=\"view\">\n            <img src={`${process.env.PUBLIC_URL}/assets/img/Price.png`} alt=\"pricing\"/>\n            <span onClick={()=>handleModal(true, item)}>View Pricing</span>\n          </div>\n        </td>\n        <td>\n        <div className=\"action\">\n          <div className=\"item file\">\n            <img src={`${process.env.PUBLIC_URL}/assets/img/file.png`} alt=\"pricing\"/>\n            <span>CSV</span>\n            </div>\n            <div className=\"item\">\n            <img src={`${process.env.PUBLIC_URL}/assets/img/statistics-report.png`} alt=\"pricing\"/>\n            <span>Report</span>\n            </div>\n            <div ref={ref} onClick={OpenDataFiled} className=\"item date\">\n            <img src={`${process.env.PUBLIC_URL}/assets/img/calendar.png`} alt=\"pricing\"/>\n            <span>Schedule Again</span>\n            {openCal && <input type=\"date\" value={date} onChange={(e)=>handleDateChange(e, item.id)} /> }\n            </div>\n          </div>\n          </td> \n        </tr>\n  )\n}\n\n\nexport default TableRow;","import React from 'react';\nimport Modal from './components/Modal';\nimport { data } from './components/data';\nimport {DateStatus } from './util/date';\nimport TableRow from './components/tableRow';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isShow : false,\n      activeTab: 0,\n      modalData : {},\n      relData: [],\n      events:[]\n    }\n  }\n\n  handleModal = (status, item) => {\n    // open pricing modal and set event data from modal\n    this.setState({isShow:status, modalData:item});\n  }\n\n  changeTab = (i) => {\n    // setting active tab index\n    this.setState({activeTab:i});\n  }\n\n componentDidMount(){\n\n  // set data according to date in tabs when first load \n\n   let e = [\n   {type:'Upcoming Campaigns', data:[]},\n   {type:'Live Campaigns', data:[]},\n   {type:'Past Campaigns', data:[]}];\n\n   data.forEach((item, i)=>{\n     // getting date status in status such as - past, future, current\n     let status = DateStatus(item.createdOn);\n\n     // puttting event in based on date status \n     if(status == 'future'){\n       e[0].data.push(item);\n     } else if(status == 'current'){\n       e[1].data.push(item);\n     } else {\n       e[2].data.push(item);\n     }\n   })\n   this.setState({events:e});\n\n }\n\n moveEvent = (val, id) => {\n\n  // first find and remove event from current tab\n  // move event in relevant data after updating date\n\n   let oldEvents = this.state.events;\n   let events = oldEvents.filter((item, idx) => idx == this.state.activeTab)[0];\n   let eventData = events ? events.data : [];\n   let removeOldEvent = eventData.filter((item, i)=> item.id != id);\n   events.data = removeOldEvent;\n   let removedEvent = eventData.filter((item, i)=> item.id == id)[0];\n\n   let time = new Date(val).getTime();\n   let status = DateStatus(time);\n\n   removedEvent.createdOn = time;\n\n    if(status == 'future'){\n      oldEvents[0].data.push(removedEvent);\n    } else if(status == 'current'){\n      oldEvents[1].data.push(removedEvent);\n    } else {\n      oldEvents[2].data.push(removedEvent);\n    }\n\n    this.setState({event:oldEvents});\n }\n\n\n\nrender(){\n\n  const {activeTab, isShow, modalData, events} = this.state;\n  return (\n    <>\n    <header className=\"header\">\n    <div className=\"container logo\">\n      <img src={`${process.env.PUBLIC_URL}/assets/img/logo.png`} alt=\"bluestack logo\" />\n\n      <div id=\"google_translate_element\"></div>\n    </div>\n    </header>\n    <div className=\"container\" >\n      <h1 className=\"heading\">Manage Campaigns</h1>\n      \n      <div className=\"tabs\">\n        <ul>\n         {events.map((item, i)=>(\n         <li \n         onClick={()=>this.changeTab(i)} \n         key={i} \n         className={`${i === activeTab && 'active'}`}>{item.type}</li>\n         ))}\n        </ul>\n      </div>\n\n      <div className=\"tab-content\">\n         {events.map((event, i)=>(\n         (i === activeTab) && \n         (event.data.length > 0 ? \n         <div key={i} className=\"table\">\n               <table>\n                 <thead>\n                   <tr>\n                   <th>Date</th>\n                   <th>Campaign</th>\n                   <th>View</th>\n                   <th>Action</th>\n                   </tr>\n                 </thead>\n                 <tbody>\n                  {event.data.map((item, i)=>\n                  (<TableRow key={i} moveEvent={this.moveEvent} handleModal={this.handleModal} item={item}/>))}\n                 </tbody>\n               </table>\n          </div> : \n          <p key={i} className=\"msg\">No Campaigns found</p>)\n          ))}\n      </div>\n\n      {/* modal form see pricing */}\n      {isShow && <Modal handleModal={this.handleModal} isOpen={isShow} data={modalData} />}\n  </div>\n  </>\n  );\n}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n<App />\n,document.getElementById('root'));\n"],"sourceRoot":""}